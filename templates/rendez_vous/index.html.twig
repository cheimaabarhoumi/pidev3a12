{% extends 'backPage/tables.html.twig' %}

{% block title %}Gestion des Rendez-vous{% endblock %}

{% block authors_table_body %}
    <div class="card shadow-sm rounded-3">
        <div class="card-header bg-white border-0 pb-0">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="h4 mb-0 text-primary fw-bold">
                    <i class="fas fa-calendar-alt me-2"></i>Gestion des Rendez-vous
                </h1>
                <button id="toggleCalendarBtn" class="btn btn-info btn-sm me-2">
                        <i class="fas fa-calendar me-1"></i>Afficher Calendrier
                    </button>
                <a href="{{ path('app_rendez_vous_new') }}" class="btn btn-primary btn-sm">
                    <i class="fas fa-plus me-1"></i>Nouveau Rendez-vous
                </a>
                  <a href="{{ path('app_entretien_index') }}" class="btn btn-info btn-sm me-2">
                    <i class="fas fa-plus me-1"></i>Liste entretien
                </a>
            </div>
        </div>
          {# Calendrier (caché par défaut) #}
        <div id="calendarContainer" class="card-body px-0 pt-3 d-none">
            <div id="calendar-holder" class="fc"></div>
        </div>
        <div class="card-body px-0 pt-3">
        <div class="d-flex justify-content-between align-items-center mb-3 px-3">
    <div class="input-group w-50">
        <span class="input-group-text bg-light"><i class="fas fa-search"></i></span>
        <input type="text" id="searchInput" class="form-control" placeholder="Rechercher un rendez-vous...">
    </div>

    <div class="ms-3">
    
        <select id="statusFilter" class="form-select">
            <option value="">Tous les statuts</option>
            <option value="confirmé">Confirmé</option>
            <option value="en attente">En attente</option>
        </select>
        
    </div>
</div>

            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="bg-light">
                        <tr>
                            <th class="ps-4">ID</th>
                            <th>Date & Heure</th>
                            <th>Type</th>
                            <th>Statut</th>
                            <th>Description</th>
                            <th>Email</th>
                            <th class="text-end pe-4">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                    {% for rendez_vou in rendez_vouses %}
                        <tr class="border-top">
                            <td class="ps-4 fw-semibold">{{ rendez_vou.id }}</td>
                            <td>
                                <span class="d-inline-flex align-items-center">
                                    <i class="far fa-clock me-2 text-muted"></i>
                                    {{ rendez_vou.dateRdv ? rendez_vou.dateRdv|date('d/m/Y H:i') : '' }}
                                </span>
                            </td>
 <td>
            {% if rendez_vou.typeRendezVous == constant('App\\Entity\\RendezVous::TYPE_ENTRETIEN') %}
                <i class="fas fa-oil-can me-2 text-muted"></i>
            {% elseif rendez_vou.typeRendezVous == constant('App\\Entity\\RendezVous::TYPE_REPARATION') %}
                <i class="fas fa-tools me-2 text-muted"></i>
            {% elseif rendez_vou.typeRendezVous == constant('App\\Entity\\RendezVous::TYPE_CONTROLE') %}
                <i class="fas fa-clipboard-check me-2 text-muted"></i>
            {% elseif rendez_vou.typeRendezVous == constant('App\\Entity\\RendezVous::TYPE_VISITE') %}
                <i class="fas fa-car me-2 text-muted"></i>
            {% else %}
                <i class="fas fa-question-circle me-2 text-muted"></i>
            {% endif %}
            {{ rendez_vou.typeRendezVous }}
        </td>

                      <td>
                                            <span class="badge rounded-pill py-2 px-3 d-inline-flex align-items-center
                                                {{ rendez_vou.status == 'confirmé' ? 'bg-success' : 'bg-warning' }}">
                                                <i class="fas fa-{{ rendez_vou.status == 'confirmé' ? 'check-circle' : 'hourglass-half' }} me-1"></i>
                                                {{ rendez_vou.status|upper }}
                                            </span>
                                        </td>
                            <td class="text-truncate" style="max-width: 200px;">
                                {{ rendez_vou.description }}
                            </td>
                           <td>{{ rendez_vou.email }}</td>
                            <td class="text-end pe-4">
                                <div class="btn-group btn-group-sm" role="group">
                                    <a href="{{ path('app_rendez_vous_show', {'id': rendez_vou.id}) }}" 
                                       class="btn btn-light border text-primary"
                                       data-bs-toggle="tooltip" title="Voir détails">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="{{ path('app_rendez_vous_edit', {'id': rendez_vou.id}) }}" 
                                       class="btn btn-light border text-warning"
                                       data-bs-toggle="tooltip" title="Modifier">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                     {# Bouton Créer Entretien affiché pour tous les rendez-vous #}
        <a href="{{ path('app_entretien_new_from_rdv', {'id': rendez_vou.id}) }}" 
           class="btn btn-light border text-success"
           data-bs-toggle="tooltip" title="Créer Entretien">
            <i class="fas fa-comments"></i>
        </a>
                                  <form method="post" action="{{ path('app_rendez_vous_delete', {'id': rendez_vou.id}) }}" onsubmit="return confirm('Êtes-vous sûr...');" class="d-inline">
    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ rendez_vou.id) }}">
    <button type="submit" class="btn btn-light border text-danger" data-bs-toggle="tooltip" title="Supprimer">
        <i class="fas fa-trash-alt"></i>
    </button>
</form>

                                </div>
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="5" class="text-center py-5 text-muted bg-light">
                                <div class="py-4">
                                    <i class="fas fa-calendar-times fa-3x mb-3 text-muted"></i>
                                    <h5 class="fw-normal">Aucun rendez-vous trouvé</h5>
                                    <p class="small mb-0">Cliquez sur "Nouveau Rendez-vous" pour en ajouter un</p>
                                </div>
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Bouton pour afficher/masquer le calendrier
            const toggleBtn = document.getElementById('toggleCalendarBtn');
            const calendarContainer = document.getElementById('calendarContainer');
            
            toggleBtn.addEventListener('click', function() {
                calendarContainer.classList.toggle('d-none');
                
                if (calendarContainer.classList.contains('d-none')) {
                    toggleBtn.innerHTML = '<i class="fas fa-calendar me-1"></i>Afficher Calendrier';
                } else {
                    toggleBtn.innerHTML = '<i class="fas fa-table me-1"></i>Afficher Tableau';
                    
                    // Initialiser le calendrier s'il n'est pas déjà initialisé
                    if (!window.calendarInitialized) {
                        initCalendar();
                        window.calendarInitialized = true;
                    }
                }
            });
            
            function initCalendar() {
                const calendarEl = document.getElementById('calendar-holder');
                const calendar = new FullCalendar.Calendar(calendarEl, {
                    initialView: 'dayGridMonth',
                    headerToolbar: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,timeGridWeek,timeGridDay'
                    },
                    events: '{{ path('calendar_available_slots') }}',
                    locale: 'fr',
                    timeZone: 'Europe/Paris',
                    editable: true,
                    eventClick: function(info) {
                        window.location.href = '{{ path('app_rendez_vous_show', {'id': 'PLACEHOLDER'}) }}'.replace('PLACEHOLDER', info.event.id);
                    },
                    dateClick: function(info) {
                        window.location.href = '{{ path('app_rendez_vous_new') }}?date=' + info.dateStr;
                    }
                });
                calendar.render();
            }
            // Filtres de recherche
const searchInput = document.getElementById('searchInput');
const statusFilter = document.getElementById('statusFilter');
const tableRows = document.querySelectorAll('tbody tr');

function filterTable() {
    const searchText = searchInput.value.toLowerCase();
    const selectedStatus = statusFilter.value.toLowerCase();

    tableRows.forEach(row => {
        const cells = row.querySelectorAll('td');
        const rowText = row.innerText.toLowerCase();
        const statusText = cells[3]?.innerText.toLowerCase() || '';

        const matchesSearch = rowText.includes(searchText);
        const matchesStatus = selectedStatus === '' || statusText.includes(selectedStatus);

        if (matchesSearch && matchesStatus) {
            row.style.display = '';
        } else {
            row.style.display = 'none';
        }
    });
}

searchInput.addEventListener('input', filterTable);
statusFilter.addEventListener('change', filterTable);

        });
    </script>
{% endblock %}
